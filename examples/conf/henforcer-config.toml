[forAnyModule]
allowedOpenUnaliasedImports = 1
maximumExportsPlusHeaderUndocumented = 1
minimumExportsPlusHeaderDocumented = 0
maximumExportsWithoutSince = 0
minimumExportsWithSince = 1
moduleHeaderCopyrightMustExistNonEmpty = true
moduleHeaderDescriptionMustExistNonEmpty = true
moduleHeaderLicenseMustExistNonEmpty = true
moduleHeaderMaintainerMustExistNonEmpty = false
encapsulatedTrees = [ "Service.ThirdPartyPetsSite"]
treeDependencies = [ {moduleTree = "Control.Monad", dependencies = ["PetStore"], note= "This is nonsensical but shows the kind of things we can here."} ]
allowedAliasUniqueness = { allAliasesUnique = true, aliases = [ "M" ], note = "We only allow M to be a repeated alias because of reasons" }

[[forAnyModule.allowedQualifications]]
module = "UnliftIO"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = { qualifiedPre = true, qualifiedPost = true }
alias = "Foo"
packageQualified = "unliftio"

[[forAnyModule.allowedQualifications]]
module = "Prelude"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = { qualifiedPre = true, qualifiedPost = true, unqualified = true}

[[forAnyModule.allowedQualifications]]
module = "Data.List"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = { qualifiedPre = true}
alias = "L"
note = "List must always be imported as L when prepositive for reasons"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = { qualifiedPre = true}
alias = "LPost"
note = "List must always be imported as LPost when postpositive for reasons"

[[forAnyModule.allowedQualifications]]
module = "Data.Bool"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = {unqualified = true}
safe=true

[[forAnyModule.allowedQualifications]]
module = "Control.Arrow"
[[forAnyModule.allowedQualifications.importScheme]]
# this prevents import of Control.Arrow as no schemes will be allowed.
qualified = { }

[[forAnyModule.allowedQualifications]]
module = "Data.Text"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = {qualifiedPre = true}
alias = "T"
packageQualified = "text"

[[forAnyModule.allowedQualifications]]
module = "PetStore.Pet.Model"
[[forAnyModule.allowedQualifications.importScheme]]
qualified =  {qualifiedPost = true}
alias="PetModel"
[[forAnyModule.allowedQualifications.importScheme]]
qualified = {unqualified = true}
# safe = false

[[forSpecifiedModules]]
module ="PetStore.Store"
allowedOpenUnaliasedImports = 2
moduleHeaderCopyrightMustExistNonEmpty = true
